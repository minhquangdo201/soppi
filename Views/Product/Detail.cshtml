@model soppi.Models.ViewModel.OrderViewModel
@using soppi.Data
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> signInManager;
@inject UserManager<ApplicationUser> UserManager;
@{
    soppi.Models.ViewModel.ProductViewModel p = ViewBag.Product;
}

<head>
    <link rel="stylesheet" href="~/Content/css/Product/Detail.css">
</head>
<div class="d-flex bg-white mx-lg-5 my-lg-3 my-4 mx-2 product-container flex-column flex-lg-row">
    <div class="img-outer col-lg-7 px-lg-4">
        <img class="product-img img-fluid" src="@p.Image" alt="@p.ProductName" />
    </div>
    <div class="col-lg-5">
        <div class="info">
            <div class="product-name">@p.ProductName</div>
            <div class="price-outer">
                <div class="price" data-price="@p.Price">@p.Price</div>
            </div>
            <div class="description">@p.Description</div>
        </div>
        <div>
            <div class="action-outer">
                <div class="d-flex my-2">
                    <label for="quantity">Số lượng:</label>
                    <div class="d-flex ps-2 me-2">
                        <input class="quantity form-control" type="number" asp-for="@Model.Quantity">
                    </div>
                    <span class="text-secondary" ms-2>Sản phẩm còn lại: @(p.StockQuantity)</span>
                </div>
                <div>
                    <a class="btn btn-info text-light btn-action" data-bs-toggle="modal"
                        data-bs-target="#exampleModal">Mua ngay</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Xác nhận đặt hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post">
                    <div class="d-none">
                        <label for="">UserId</label>
                        <input type="text" class="form-control" asp-for="@Model.UserId"
                            value="@signInManager.UserManager.GetUserId(User)">
                    </div>
                    <div class="d-none">
                        <label for="">ProductId</label>
                        <input type="text" class="form-control" asp-for="@Model.ProductId" value="@p.Id">
                    </div>
                    <div class="my-2 d-none">
                        <label for="">Số lượng</label>
                        <input type="number" name="Quantity" class="form-control" asp-for="@Model.Quantity">
                    </div>
                    <div class="my-2">
                        <label for="">Tổng tiền</label>
                        <input type="text" disabled class="form-control" id="total-price">
                    </div>
                    <button type="sumbit" class="my-2 btn btn-primary" asp-action="Add" asp-controller="Order">Xác nhận
                    </button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                </form>
            </div>

        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Lặp qua mỗi phần tử có class là "price"
        $('.price').each(function () {
            // Lấy giá trị số từ thuộc tính data-price
            var price = parseFloat($(this).data('price'));
            // Định dạng lại số với dấu phẩy
            var formattedPrice = price.toLocaleString();
            // Gán lại văn bản đã định dạng vào phần tử
            $(this).text(formattedPrice + " đ");
        });
    });
</script>

<script>
    $(document).ready(function () {
        $('.quantity').on('input', function () {
            var $input = $(this);
            var quantity = parseInt($input.val());
            var stockQuantity = parseInt("@p.StockQuantity");

            if (!quantity || quantity < 0) {
                $input.val(null);
                quantity = null;
                $input.closest('.action-outer').find('.text-secondary').removeClass('text-danger').text('Sản phẩm còn lại: ' + stockQuantity);
                return;
            }

            if (quantity > stockQuantity) {
                $input.closest('.action-outer').find('.text-secondary').addClass('text-danger').text('Số lượng sản phẩm không đủ');
                return;
            }

            var remainingQuantity = stockQuantity - quantity;
            $input.closest('.action-outer').find('.text-secondary').removeClass('text-danger').text('Sản phẩm còn lại: ' + remainingQuantity);
        });
    });
</script>

<script>
    $(document).ready(function () {
        // Lắng nghe sự kiện khi input số lượng bên ngoài thay đổi
        $('.quantity').on('input', function () {
            // Lấy giá trị nhập vào
            var quantityValue = $(this).val();
            // Cập nhật giá trị số lượng trong modal
            $('.modal-body .form-control[name="Quantity"]').val(quantityValue);
        });
    });
</script>

<script>
    $(document).ready(function () {
        // Lắng nghe sự kiện khi input số lượng thay đổi
        $('.quantity').on('input', function () {
            var quantity = parseInt($(this).val());
            var price = parseFloat($('.price').data('price'));
            var totalPrice = quantity * price; // Tính toán tổng tiền

            // Định dạng tổng tiền có dấu phẩy
            var formattedPrice = totalPrice.toLocaleString();

            // Cập nhật giá trị tổng tiền vào ô input tương ứng
            $('#total-price').val(formattedPrice);
        });
    });
</script>
